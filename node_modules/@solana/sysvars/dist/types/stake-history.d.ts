import { type FetchAccountConfig } from '@solana/accounts';
import { type VariableSizeCodec, type VariableSizeDecoder, type VariableSizeEncoder } from '@solana/codecs';
import type { GetAccountInfoApi } from '@solana/rpc-api';
import type { Rpc } from '@solana/rpc-spec';
import { type LamportsUnsafeBeyond2Pow53Minus1 } from '@solana/rpc-types';
type Entry = Readonly<{
    activating: LamportsUnsafeBeyond2Pow53Minus1;
    deactivating: LamportsUnsafeBeyond2Pow53Minus1;
    effective: LamportsUnsafeBeyond2Pow53Minus1;
}>;
/**
 * The `StakeHistory` sysvar.
 *
 * History of stake activations and de-activations.
 */
export type SysvarStakeHistory = Entry[];
export declare function getSysvarStakeHistoryEncoder(): VariableSizeEncoder<SysvarStakeHistory>;
export declare function getSysvarStakeHistoryDecoder(): VariableSizeDecoder<SysvarStakeHistory>;
export declare function getSysvarStakeHistoryCodec(): VariableSizeCodec<SysvarStakeHistory>;
/**
 * Fetch the `StakeHistory` sysvar.
 *
 * History of stake activations and de-activations.
 */
export declare function fetchSysvarStakeHistory(rpc: Rpc<GetAccountInfoApi>, config?: FetchAccountConfig): Promise<SysvarStakeHistory>;
export {};
//# sourceMappingURL=stake-history.d.ts.map