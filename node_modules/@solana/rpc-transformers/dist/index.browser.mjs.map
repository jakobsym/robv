{"version":3,"sources":["../src/default-commitment.ts","../src/params-transformer-bigint-downcast.ts","../src/params-transformer-integer-overflow.ts","../src/params-transformer-options-object-position-config.ts","../src/tree-traversal.ts","../src/params-transformer.ts","../src/response-transformer-bigint-upcast.ts","../src/response-transformer.ts","../src/response-transformer-allowed-numeric-values.ts"],"names":[],"mappings":"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","file":"index.browser.mjs","sourcesContent":["import type { Commitment } from '@solana/rpc-types';\n\ntype Config = Readonly<{\n    commitmentPropertyName: string;\n    optionsObjectPositionInParams: number;\n    overrideCommitment?: Commitment;\n    params: unknown[];\n}>;\n\nexport function applyDefaultCommitment({\n    commitmentPropertyName,\n    params,\n    optionsObjectPositionInParams,\n    overrideCommitment,\n}: Config) {\n    const paramInTargetPosition = params[optionsObjectPositionInParams];\n    if (\n        // There's no config.\n        paramInTargetPosition === undefined ||\n        // There is a config object.\n        (paramInTargetPosition && typeof paramInTargetPosition === 'object' && !Array.isArray(paramInTargetPosition))\n    ) {\n        if (\n            // The config object already has a commitment set.\n            paramInTargetPosition &&\n            commitmentPropertyName in paramInTargetPosition\n        ) {\n            if (\n                !paramInTargetPosition[commitmentPropertyName as keyof typeof paramInTargetPosition] ||\n                paramInTargetPosition[commitmentPropertyName as keyof typeof paramInTargetPosition] === 'finalized'\n            ) {\n                // Delete the commitment property; `finalized` is already the server default.\n                const nextParams = [...params];\n                const {\n                    [commitmentPropertyName as keyof typeof paramInTargetPosition]: _, // eslint-disable-line @typescript-eslint/no-unused-vars\n                    ...rest\n                } = paramInTargetPosition;\n                if (Object.keys(rest).length > 0) {\n                    nextParams[optionsObjectPositionInParams] = rest;\n                } else {\n                    if (optionsObjectPositionInParams === nextParams.length - 1) {\n                        nextParams.length--;\n                    } else {\n                        nextParams[optionsObjectPositionInParams] = undefined;\n                    }\n                }\n                return nextParams;\n            }\n        } else if (overrideCommitment !== 'finalized') {\n            // Apply the default commitment.\n            const nextParams = [...params];\n            nextParams[optionsObjectPositionInParams] = {\n                ...paramInTargetPosition,\n                [commitmentPropertyName]: overrideCommitment,\n            };\n            return nextParams;\n        }\n    }\n    return params;\n}\n","export function downcastNodeToNumberIfBigint(value: bigint): number;\nexport function downcastNodeToNumberIfBigint<T>(value: T): T;\nexport function downcastNodeToNumberIfBigint(value: unknown): unknown {\n    return typeof value === 'bigint'\n        ? // FIXME(solana-labs/solana/issues/30341) Create a data type to represent u64 in the Solana\n          // JSON RPC implementation so that we can throw away this entire patcher instead of unsafely\n          // downcasting `bigints` to `numbers`.\n          Number(value)\n        : value;\n}\n","import { KeyPath, TraversalState } from './tree-traversal';\n\ntype IntegerOverflowHandler = (keyPath: KeyPath, value: bigint) => void;\n\nexport function getIntegerOverflowNodeVisitor(onIntegerOverflow: IntegerOverflowHandler) {\n    return <T>(value: T, { keyPath }: TraversalState): T => {\n        if (typeof value === 'bigint') {\n            if (onIntegerOverflow && (value > Number.MAX_SAFE_INTEGER || value < -Number.MAX_SAFE_INTEGER)) {\n                onIntegerOverflow(keyPath as (number | string)[], value);\n            }\n        }\n        return value;\n    };\n}\n","export const OPTIONS_OBJECT_POSITION_BY_METHOD: Record<string, number> = {\n    accountNotifications: 1,\n    blockNotifications: 1,\n    getAccountInfo: 1,\n    getBalance: 1,\n    getBlock: 1,\n    getBlockHeight: 0,\n    getBlockProduction: 0,\n    getBlocks: 2,\n    getBlocksWithLimit: 2,\n    getConfirmedBlock: 1,\n    getConfirmedBlocks: 1,\n    getConfirmedBlocksWithLimit: 2,\n    getConfirmedSignaturesForAddress2: 1,\n    getConfirmedTransaction: 1,\n    getEpochInfo: 0,\n    getFeeCalculatorForBlockhash: 1,\n    getFeeForMessage: 1,\n    getFees: 1,\n    getInflationGovernor: 0,\n    getInflationReward: 1,\n    getLargestAccounts: 0,\n    getLatestBlockhash: 0,\n    getLeaderSchedule: 1,\n    getMinimumBalanceForRentExemption: 1,\n    getMultipleAccounts: 1,\n    getProgramAccounts: 1,\n    getRecentBlockhash: 1,\n    getSignaturesForAddress: 1,\n    getSlot: 0,\n    getSlotLeader: 0,\n    getStakeActivation: 1,\n    getStakeMinimumDelegation: 0,\n    getSupply: 0,\n    getTokenAccountBalance: 1,\n    getTokenAccountsByDelegate: 2,\n    getTokenAccountsByOwner: 2,\n    getTokenLargestAccounts: 1,\n    getTokenSupply: 1,\n    getTransaction: 1,\n    getTransactionCount: 0,\n    getVoteAccounts: 0,\n    isBlockhashValid: 1,\n    logsNotifications: 1,\n    programNotifications: 1,\n    requestAirdrop: 2,\n    sendTransaction: 1,\n    signatureNotifications: 1,\n    simulateTransaction: 1,\n};\n","export type KeyPathWildcard = { readonly __brand: unique symbol };\nexport type KeyPath = ReadonlyArray<KeyPath | KeyPathWildcard | number | string>;\n\nexport const KEYPATH_WILDCARD = {} as KeyPathWildcard;\n\ntype NodeVisitor = <TState extends TraversalState>(value: unknown, state: TState) => unknown;\nexport type TraversalState = Readonly<{\n    keyPath: KeyPath;\n}>;\n\nexport function getTreeWalker(visitors: NodeVisitor[]) {\n    return function traverse<TState extends TraversalState>(node: unknown, state: TState): unknown {\n        if (Array.isArray(node)) {\n            return node.map((element, ii) => {\n                const nextState = {\n                    ...state,\n                    keyPath: [...state.keyPath, ii],\n                };\n                return traverse(element, nextState);\n            });\n        } else if (typeof node === 'object' && node !== null) {\n            const out: Record<number | string | symbol, unknown> = {};\n            for (const propName in node) {\n                if (!Object.prototype.hasOwnProperty.call(node, propName)) {\n                    continue;\n                }\n                const nextState = {\n                    ...state,\n                    keyPath: [...state.keyPath, propName],\n                };\n                out[propName] = traverse(node[propName as keyof typeof node], nextState);\n            }\n            return out;\n        } else {\n            return visitors.reduce((acc, visitNode) => visitNode(acc, state), node);\n        }\n    };\n}\n","import { pipe } from '@solana/functional';\nimport { Commitment } from '@solana/rpc-types';\n\nimport { applyDefaultCommitment } from './default-commitment';\nimport { downcastNodeToNumberIfBigint } from './params-transformer-bigint-downcast';\nimport { getIntegerOverflowNodeVisitor } from './params-transformer-integer-overflow';\nimport { OPTIONS_OBJECT_POSITION_BY_METHOD } from './params-transformer-options-object-position-config';\nimport { getTreeWalker, KeyPath } from './tree-traversal';\n\nexport type ParamsTransformerConfig = Readonly<{\n    defaultCommitment?: Commitment;\n    onIntegerOverflow?: (methodName: string, keyPath: KeyPath, value: bigint) => void;\n}>;\n\nexport function getDefaultParamsTransformerForSolanaRpc(config?: ParamsTransformerConfig) {\n    const defaultCommitment = config?.defaultCommitment;\n    const handleIntegerOverflow = config?.onIntegerOverflow;\n    return <T>(rawParams: T, methodName: string) => {\n        const traverse = getTreeWalker([\n            ...(handleIntegerOverflow\n                ? [getIntegerOverflowNodeVisitor((...args) => handleIntegerOverflow(methodName, ...args))]\n                : []),\n            downcastNodeToNumberIfBigint,\n        ]);\n        const initialState = {\n            keyPath: [],\n        };\n        const patchedParams = traverse(rawParams, initialState);\n        if (!Array.isArray(patchedParams)) {\n            return patchedParams;\n        }\n        const optionsObjectPositionInParams = OPTIONS_OBJECT_POSITION_BY_METHOD[methodName];\n        if (optionsObjectPositionInParams == null) {\n            return patchedParams;\n        }\n        return pipe(\n            patchedParams,\n            params =>\n                applyDefaultCommitment({\n                    commitmentPropertyName: methodName === 'sendTransaction' ? 'preflightCommitment' : 'commitment',\n                    optionsObjectPositionInParams,\n                    overrideCommitment: defaultCommitment,\n                    params,\n                }),\n            // FIXME Remove when https://github.com/anza-xyz/agave/pull/483 is deployed.\n            params =>\n                methodName === 'sendTransaction'\n                    ? applyFixForIssue479(params as [unknown, { skipPreflight?: boolean } | undefined])\n                    : params,\n        );\n    };\n}\n\n// See https://github.com/anza-xyz/agave/issues/479\nfunction applyFixForIssue479(params: [unknown, { skipPreflight?: boolean } | undefined]) {\n    if (params[1]?.skipPreflight !== true) {\n        return params;\n    }\n    return [params[0], { ...params[1], preflightCommitment: 'processed' }, ...params.slice(2)];\n}\n","import { KeyPath, KEYPATH_WILDCARD, TraversalState } from './tree-traversal';\n\nfunction keyPathIsAllowedToBeNumeric(keyPath: KeyPath, allowedNumericKeyPaths: readonly KeyPath[]) {\n    return allowedNumericKeyPaths.some(prohibitedKeyPath => {\n        if (prohibitedKeyPath.length !== keyPath.length) {\n            return false;\n        }\n        for (let ii = keyPath.length - 1; ii >= 0; ii--) {\n            const keyPathPart = keyPath[ii];\n            const prohibitedKeyPathPart = prohibitedKeyPath[ii];\n            if (\n                prohibitedKeyPathPart !== keyPathPart &&\n                (prohibitedKeyPathPart !== KEYPATH_WILDCARD || typeof keyPathPart !== 'number')\n            ) {\n                return false;\n            }\n        }\n        return true;\n    });\n}\n\nexport function getBigIntUpcastVisitor(allowedNumericKeyPaths: readonly KeyPath[]) {\n    return function upcastNodeToBigIntIfNumber(value: unknown, { keyPath }: TraversalState) {\n        if (\n            typeof value === 'number' &&\n            Number.isInteger(value) &&\n            !keyPathIsAllowedToBeNumeric(keyPath, allowedNumericKeyPaths)\n        ) {\n            // FIXME(solana-labs/solana/issues/30341) Create a data type to represent u64 in the\n            // Solana JSON RPC implementation so that we can throw away this entire patcher instead\n            // of unsafely upcasting `numbers` to `bigints`.\n            return BigInt(value);\n        } else {\n            return value;\n        }\n    };\n}\n","import { getSolanaErrorFromJsonRpcError } from '@solana/errors';\nimport { RpcApiConfig } from '@solana/rpc-spec';\n\nimport { AllowedNumericKeypaths } from './response-transformer-allowed-numeric-values';\nimport { getBigIntUpcastVisitor } from './response-transformer-bigint-upcast';\nimport { getTreeWalker } from './tree-traversal';\n\nexport type ResponseTransformerConfig<TApi> = Readonly<{\n    allowedNumericKeyPaths?: AllowedNumericKeypaths<TApi>;\n}>;\n\ntype JsonRpcResponse = { error: Parameters<typeof getSolanaErrorFromJsonRpcError>[0] } | { result: unknown };\n\nexport function getDefaultResponseTransformerForSolanaRpc<TApi>(\n    config?: ResponseTransformerConfig<TApi>,\n): NonNullable<RpcApiConfig['responseTransformer']> {\n    return (<T>(rawResponse: JsonRpcResponse, methodName?: keyof TApi): T => {\n        if ('error' in rawResponse) {\n            throw getSolanaErrorFromJsonRpcError(rawResponse.error);\n        }\n        const keyPaths =\n            config?.allowedNumericKeyPaths && methodName ? config.allowedNumericKeyPaths[methodName] : undefined;\n        const traverse = getTreeWalker([getBigIntUpcastVisitor(keyPaths ?? [])]);\n        const initialState = {\n            keyPath: [],\n        };\n        return traverse(rawResponse.result, initialState) as T;\n    }) as NonNullable<RpcApiConfig['responseTransformer']>;\n}\n","import { KeyPath, KEYPATH_WILDCARD } from './tree-traversal';\n\nexport type AllowedNumericKeypaths<TApi> = Partial<Record<keyof TApi, readonly KeyPath[]>>;\n\n// Numeric values nested in `jsonParsed` accounts\nexport const jsonParsedTokenAccountsConfigs = [\n    // parsed Token/Token22 token account\n    ['data', 'parsed', 'info', 'tokenAmount', 'decimals'],\n    ['data', 'parsed', 'info', 'tokenAmount', 'uiAmount'],\n    ['data', 'parsed', 'info', 'rentExemptReserve', 'decimals'],\n    ['data', 'parsed', 'info', 'rentExemptReserve', 'uiAmount'],\n    ['data', 'parsed', 'info', 'delegatedAmount', 'decimals'],\n    ['data', 'parsed', 'info', 'delegatedAmount', 'uiAmount'],\n    ['data', 'parsed', 'info', 'extensions', KEYPATH_WILDCARD, 'state', 'olderTransferFee', 'transferFeeBasisPoints'],\n    ['data', 'parsed', 'info', 'extensions', KEYPATH_WILDCARD, 'state', 'newerTransferFee', 'transferFeeBasisPoints'],\n    ['data', 'parsed', 'info', 'extensions', KEYPATH_WILDCARD, 'state', 'preUpdateAverageRate'],\n    ['data', 'parsed', 'info', 'extensions', KEYPATH_WILDCARD, 'state', 'currentRate'],\n];\nexport const jsonParsedAccountsConfigs = [\n    ...jsonParsedTokenAccountsConfigs,\n    // parsed AddressTableLookup account\n    ['data', 'parsed', 'info', 'lastExtendedSlotStartIndex'],\n    // parsed Config account\n    ['data', 'parsed', 'info', 'slashPenalty'],\n    ['data', 'parsed', 'info', 'warmupCooldownRate'],\n    // parsed Token/Token22 mint account\n    ['data', 'parsed', 'info', 'decimals'],\n    // parsed Token/Token22 multisig account\n    ['data', 'parsed', 'info', 'numRequiredSigners'],\n    ['data', 'parsed', 'info', 'numValidSigners'],\n    // parsed Stake account\n    ['data', 'parsed', 'info', 'stake', 'delegation', 'warmupCooldownRate'],\n    // parsed Sysvar rent account\n    ['data', 'parsed', 'info', 'exemptionThreshold'],\n    ['data', 'parsed', 'info', 'burnPercent'],\n    // parsed Vote account\n    ['data', 'parsed', 'info', 'commission'],\n    ['data', 'parsed', 'info', 'votes', KEYPATH_WILDCARD, 'confirmationCount'],\n];\nexport const innerInstructionsConfigs = [\n    ['index'],\n    ['instructions', KEYPATH_WILDCARD, 'accounts', KEYPATH_WILDCARD],\n    ['instructions', KEYPATH_WILDCARD, 'programIdIndex'],\n    ['instructions', KEYPATH_WILDCARD, 'stackHeight'],\n];\nexport const messageConfig = [\n    ['addressTableLookups', KEYPATH_WILDCARD, 'writableIndexes', KEYPATH_WILDCARD],\n    ['addressTableLookups', KEYPATH_WILDCARD, 'readonlyIndexes', KEYPATH_WILDCARD],\n    ['header', 'numReadonlySignedAccounts'],\n    ['header', 'numReadonlyUnsignedAccounts'],\n    ['header', 'numRequiredSignatures'],\n    ['instructions', KEYPATH_WILDCARD, 'accounts', KEYPATH_WILDCARD],\n    ['instructions', KEYPATH_WILDCARD, 'programIdIndex'],\n    ['instructions', KEYPATH_WILDCARD, 'stackHeight'],\n] as const;\n"]}